Objects to represent:

grid with S, E and walls

search state maps point+direction to
  - iteration number when this entry was last updated
  - minimum score

worklist, starts with just the path starting at S and no moves

algorithm:

increment iteration number

to take a step, extend each item in the worklist by adding either a step forward (if feasible) or a turn

after taking a step, notify the search state of (point+direction, score, iteration number)

if search state contains no updates with this iteration number, stop
otherwise, add any point+direction having this iteration number to the worklist

report the minimum of the (up to) four scores for E+<any>

-----------
Alternative

Calculate all the points that are feasible and approximately halfway between S and E.
For each I, recursively solve S-I and I-E
by finding all the points that are approximately halfway between S and I / I and E.

When the distance is less than a threshold, do an exhaustive search using the algorithm above,
to find the minimum score for reaching each one.

To solve a super-problem, iterate across all split points and find the minimum sum
of the two sub-problem scores going through that split point.
